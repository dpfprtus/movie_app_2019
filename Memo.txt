React는 component로 구성되어있다.

- component: HTML을 반환하는 함수.\

- Jsx: HTML IN JS,컴포넌트를 만들고 어떻게 사용하는지에 대한 것.

- React는 한번에 하나의 컴포넌트만 렌더링 할 수 있다.->이제 수정되서 두개 컴포넌트를 렌더링 할 수 있다.
- prpos:컴포넌트에 넣는 함수 인자같은것.

- react component가 내부적으로 key프로퍼티를 필요로 한다.

- prop-types:전달하는 props을 검증한다.

- React는 자동적으로 모든 class component(State)의 render method를 실행하고자 한다.

- state:오브젝트이다. 가변하는 데이터를 다룬다.

- 리액트는 랜더펑션을 리프레쉬하지 않는다. -> state를 변경하기 위해서는 render function을 호출해서 바꿔주어야 한다. 따라서 setState로 state를 refresh해준다.
SPA라서 변화가 있는 부분만 랜더링한다. **setState가 왜필요한지 이해.
--> setState를 호출할 때마다 react는 새로운 state와 함께 render function을 호출할 것이다.

Component Mounting
호출되는 함수 순서.
1.component 가 화면에 mount될 때 constructor를 호출한다.
2. 그후 render한다.
3. componentDidMount

Component Updating
호출되는 함수 순서.
1. render
2. componentDidUpdate

Unmount - page나갈 때 

<axios>
fetch위에서 작동하는 작은 layer

<오류에 봉착>
1. Movie컴포넌트에서 여러 인자를 받아서 하나만 사용할때 구조할당분해를 써서 {}로 감싸줘야하는데 이걸 놓침..

2.키가 필요하다는 오류. movie컴포넌트로 id,summary등 인자보낼때 key인자도 보내야한다. -> 구분이 가능해야 

3.Warning: Invalid DOM property `class`. Did you mean `className`?
react가 jsx문법안에서의 class와 컴포넌트class랑 헷갈려한다. 따라서 jsx안에서의 class를 className으로 바꿔준다

<배포>
gh-pages를 통한 깃헙.io배포.
대문자가 주소창에 들어가면 안댐
스크립트를 만들어준다
1. deploy:"gh-pages -d build"
2. predeploy:"npm run build" -> deploy가 실행되기전에 실행된다.

<마무리>
1. state를 갖기 위해 class component를 가질 필요는 없다(new react) -> React Hook덕분에... 대체자 이 둘을 일을 하는 다른 방식인것. 
<Route>
-리액트 라우트는 기본적으로 url을 가져와 비교한다.
따라서 url이 /home/a라고 한다면
/home과 /home/a가 매치된다. 따라서 이렇게 여러게의 컴포넌트를 가져오는걸 방지하려면 exact={true}를 쓰면된다.
